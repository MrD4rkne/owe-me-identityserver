name: SonarQube

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest

    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v5
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0  # Full history for SonarCloud analysis

      - uses: dotnet/nbgv@master
        id: nbgv

      - name: Get version
        run: echo "${{ steps.nbgv.outputs.SemVer2 }}"

      -   name: SonarScanner for .NET 9 with pull request decoration support
          uses: highbyte/sonarscan-dotnet@v2.4.2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
              # The key of the SonarQube project
              sonarProjectKey: ${{ secrets.SONAR_PROJECT_KEY }}
              # The name of the SonarQube project
              sonarProjectName: ${{ secrets.SONAR_PROJECT_KEY }}
              # The name of the SonarQube organization in SonarCloud
              sonarOrganization: ${{ secrets.SONAR_ORG }}
              # The SonarQube server URL
              sonarHostname: ${{ secrets.SONAR_HOST_URL }}
              # Command arguments to dotnet test
              dotnetTestArguments: --configuration Release --logger trx --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover
              # Extra command arguments for the SonarScanner 'begin' command
              sonarBeginArguments: /d:sonar.cs.opencover.reportsPaths="**/TestResults/**/coverage.opencover.xml" -d:sonar.cs.vstest.reportsPaths="**/TestResults/*.trx" /d:sonar.exclusions="**/Pages/**,**/Migrations/**,**/wwwroot/**"
